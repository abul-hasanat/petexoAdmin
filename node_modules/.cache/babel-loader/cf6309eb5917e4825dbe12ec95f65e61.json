{"ast":null,"code":"import _defineProperty from\"D:\\\\Petexo Working\\\\Petexo\\\\Petexo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from\"react\";import classNames from\"classnames\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import Input from\"@material-ui/core/Input\";// @material-ui/icons\nimport Clear from\"@material-ui/icons/Clear\";import Check from\"@material-ui/icons/Check\";// core components\nimport styles from\"assets/jss/material-dashboard-react/components/customInputStyle.js\";var useStyles=makeStyles(styles);export default function CustomInput(props){var _classNames,_classNames2;var classes=useStyles();var formControlProps=props.formControlProps,labelText=props.labelText,id=props.id,labelProps=props.labelProps,inputProps=props.inputProps,error=props.error,success=props.success,value=props.value,onChange=props.onChange,name=props.name,icon=props.icon;var labelClasses=classNames((_classNames={},_defineProperty(_classNames,\" \"+classes.labelRootError,error),_defineProperty(_classNames,\" \"+classes.labelRootSuccess,success&&!error),_classNames));var underlineClasses=classNames((_classNames2={},_defineProperty(_classNames2,classes.underlineError,error),_defineProperty(_classNames2,classes.underlineSuccess,success&&!error),_defineProperty(_classNames2,classes.underline,true),_classNames2));var marginTop=classNames(_defineProperty({},classes.marginTop,labelText===undefined));return/*#__PURE__*/React.createElement(FormControl,Object.assign({},formControlProps,{className:formControlProps.className+\" \"+classes.formControl}),labelText!==undefined?/*#__PURE__*/React.createElement(InputLabel,Object.assign({style:{fontSize:20},className:classes.labelRoot+labelClasses,htmlFor:id},labelProps),labelText):null,/*#__PURE__*/React.createElement(Input,Object.assign({classes:{root:marginTop,disabled:classes.disabled,underline:underlineClasses},id:id,value:value,onChange:onChange,name:name},inputProps)),error?/*#__PURE__*/React.createElement(Clear,{className:classes.feedback+\" \"+classes.labelRootError}):success?/*#__PURE__*/React.createElement(Check,{className:classes.feedback+\" \"+classes.labelRootSuccess}):null);}","map":{"version":3,"sources":["D:/Petexo Working/Petexo/Petexo/src/components/CustomInput/CustomInput.js"],"names":["React","classNames","makeStyles","FormControl","InputLabel","Input","Clear","Check","styles","useStyles","CustomInput","props","classes","formControlProps","labelText","id","labelProps","inputProps","error","success","value","onChange","name","icon","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","marginTop","undefined","className","formControl","fontSize","labelRoot","root","disabled","feedback"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n// @material-ui/icons\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n    value,\n    onChange,\n    name,\n    icon\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined\n  });\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      {labelText !== undefined ? (\n        <InputLabel\n          style={{fontSize:20}}\n          className={classes.labelRoot + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel> \n      ) : null}\n      <Input\n        classes={{\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        value = {value}\n        onChange= {onChange}\n        name = {name}\n        {...inputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}