{"ast":null,"code":"import _defineProperty from \"D:\\\\Petexo Working\\\\Petexo\\\\Petexo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Petexo Working\\\\Petexo\\\\Petexo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Petexo Working\\\\Petexo\\\\Petexo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\Petexo Working\\\\Petexo\\\\Petexo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\Petexo Working\\\\Petexo\\\\Petexo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Petexo Working\\\\Petexo\\\\Petexo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Petexo Working\\\\Petexo\\\\Petexo\\\\src\\\\views\\\\review\\\\ReviewSetup.js\";\nimport React, { Component } from \"react\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport axios from \"axios\";\nvar styles = {\n  cardCategoryWhite: {\n    color: \"#000000\",\n    //\"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"16px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#000000\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"600\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\nvar userInfo = JSON.parse(localStorage.getItem(\"UserData\"));\nexport var ReviewSetup = /*#__PURE__*/function (_Component) {\n  _inherits(ReviewSetup, _Component);\n\n  var _super = _createSuper(ReviewSetup);\n\n  function ReviewSetup(props) {\n    var _this;\n\n    _classCallCheck(this, ReviewSetup);\n\n    _this = _super.call(this, props);\n\n    _this.handelChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.fetchUserDetails = function (user_id) {\n      axios.get(process.env.REACT_APP_API + \"/review/edit-review/\" + _this.props.editStoreID, {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }).then(function (res) {\n        // console.log(res);\n        _this.setState({\n          review: res.data[0].review\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.UpdateProfileHandler = function () {\n      var btntext = _this.state.review;\n      axios.post(process.env.REACT_APP_API + \"/review/edit/\" + _this.props.editStoreID + \"/\" + btntext).then(function (res) {\n        // this.setState({\n        // \tmsg: res.data.message,\n        // });\n        window.location.reload(false);\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      review: \"\" // updateID : (this.props.editStoreID === undefined?\"\":this.props.editStoreID),\n\n    };\n    _this.handelChange = _this.handelChange.bind(_assertThisInitialized(_this));\n    _this.UpdateProfileHandler = _this.UpdateProfileHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  } // const classes = useStyles();\n\n\n  _createClass(ReviewSetup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUserDetails(userInfo.UserID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, \"Edit Review\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        labelText: \"Review\",\n        id: \"review\",\n        name: \"review\",\n        value: this.state.review,\n        onChange: this.handelChange,\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          multiline: true,\n          rows: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(CardFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.UpdateProfileHandler,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, \"Update Review\"))))));\n    }\n  }]);\n\n  return ReviewSetup;\n}(Component);\nReviewSetup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ReviewSetup);","map":{"version":3,"sources":["D:/Petexo Working/Petexo/Petexo/src/views/review/ReviewSetup.js"],"names":["React","Component","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardBody","CardFooter","PropTypes","withStyles","axios","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","userInfo","JSON","parse","localStorage","getItem","ReviewSetup","props","handelChange","e","setState","target","name","value","fetchUserDetails","user_id","get","process","env","REACT_APP_API","editStoreID","headers","then","res","review","data","err","console","log","UpdateProfileHandler","btntext","state","post","window","location","reload","bind","UserID","classes","fullWidth","multiline","rows","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"#000000\", //\"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"16px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#000000\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"600\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\n\r\n var userInfo = JSON.parse(localStorage.getItem(\"UserData\"));\r\n\r\n  export class ReviewSetup extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        review : \"\",\r\n        // updateID : (this.props.editStoreID === undefined?\"\":this.props.editStoreID),\r\n      };\r\n       this.handelChange = this.handelChange.bind(this);\r\n       this.UpdateProfileHandler = this.UpdateProfileHandler.bind(this)\r\n    }\r\n\r\n  // const classes = useStyles();\r\n\r\n  handelChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n  };\r\n  \r\n\r\n  fetchUserDetails = (user_id) => {\r\n   \r\n\t\taxios\r\n\t\t\t.get(process.env.REACT_APP_API+\"/review/edit-review/\" +  this.props.editStoreID , {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"content-type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\t// console.log(res);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\treview: res.data[0].review,\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\r\n//   UpdateProfileHandler = (e) => {\r\n//     console.log(\"Review is -------------- \"+ this.state.review)\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//         formData.append(\"review\", \"Hello\" )  //this.state.review);\r\n//         console.log(\"Form Data is \"+ formData)\r\n\r\n// \t\taxios\r\n// \t\t\t.post(\r\n// \t\t\t\tprocess.env.REACT_APP_API+\"/review/update/\" + this.props.editStoreID +\"/\"+ \"Hello\",\r\n\t\t\t\t\r\n// \t\t\t\tformData,\r\n// \t\t\t\t{\r\n// \t\t\t\t\theaders: {\r\n// \t\t\t\t\t\t// \"content-type\": \"application/json\",\r\n// \t\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n// \t\t\t\t\t},\r\n// \t\t\t\t}\r\n// \t\t\t)\r\n// \t\t\t.then((res) => {\r\n\t\t\t\t\r\n//         window.location.reload(false);\r\n// \t\t\t})\r\n// \t\t\t.catch((err) => console.log(err));\r\n// \t};\r\n\r\n\r\n\r\nUpdateProfileHandler = () => {\r\nlet btntext =  this.state.review\r\n    axios\r\n\t\t\t.post(process.env.REACT_APP_API + \"/review/edit/\" + this.props.editStoreID + \"/\" + btntext)\r\n\t\t\t.then((res) => {\r\n\t\t\t\t// this.setState({\r\n\t\t\t\t// \tmsg: res.data.message,\r\n\t\t\t\t// });\r\n                    window.location.reload(false)   \r\n\t\t\t\t\r\n\t\t\t})\r\n      .catch((err) => console.log(err));\r\n    \r\n   \r\n};\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.fetchUserDetails(userInfo.UserID);\r\n   \r\n   \r\n\t}\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n\r\n              <h4 className={classes.cardTitleWhite}>Edit Review</h4>\r\n              {/* <p className={classes.cardCategoryWhite}>Complete your profile</p> */}\r\n            </CardHeader>\r\n            <CardBody>\r\n             \r\n            <GridContainer> \r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  {/* <InputLabel style={{ color: \"#AAAAAA\" }}>About me</InputLabel> */}\r\n                  <CustomInput\r\n                    labelText=\"Review\"\r\n                    id=\"review\"\r\n                    name=\"review\"   \r\n                    value={this.state.review}\r\n                    onChange={this.handelChange}\r\n                    formControlProps={{\r\n                      fullWidth: true\r\n                    }}\r\n                    inputProps={{\r\n                      multiline: true,\r\n                      rows: 5\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n\r\n             \r\n            </CardBody>\r\n\r\n\r\n            <CardFooter>\r\n              <Button  onClick={this.UpdateProfileHandler} color=\"primary\">Update Review</Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        \r\n      </GridContainer>\r\n    </div>\r\n  )};\r\n}\r\n\r\n\r\nReviewSetup.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ReviewSetup);"]},"metadata":{},"sourceType":"module"}