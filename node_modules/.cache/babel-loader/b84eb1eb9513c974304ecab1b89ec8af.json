{"ast":null,"code":"import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Search from\"@material-ui/icons/Search\";// core components\nimport CustomInput from\"components/CustomInput/CustomInput.js\";import Button from\"components/CustomButtons/Button.js\";import styles from\"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";var useStyles=makeStyles(styles);export default function AdminNavbarLinks(){var classes=useStyles();// const [openNotification, setOpenNotification] = React.useState(null);\n// const [openProfile, setOpenProfile] = React.useState(null);\n// const handleClickNotification = event => {\n//   if (openNotification && openNotification.contains(event.target)) {\n//     setOpenNotification(null);\n//   } else {\n//     setOpenNotification(event.currentTarget);\n//   }\n// };\n// const handleCloseNotification = () => {\n//   setOpenNotification(null);\n// };\n// const handleClickProfile = event => {\n//   if (openProfile && openProfile.contains(event.target)) {\n//     setOpenProfile(null);\n//   } else {\n//     setOpenProfile(event.currentTarget);\n//   }\n// };\n// const handleCloseProfile = () => {\n//   setOpenProfile(null);\n// };\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.searchWrapper},/*#__PURE__*/React.createElement(CustomInput,{formControlProps:{className:classes.margin+\" \"+classes.search},inputProps:{placeholder:\"Search\",inputProps:{\"aria-label\":\"Search\"}}}),/*#__PURE__*/React.createElement(Button,{color:\"white\",\"aria-label\":\"edit\",justIcon:true,round:true},/*#__PURE__*/React.createElement(Search,null))));}","map":{"version":3,"sources":["D:/Petexo Working/Petexo/Petexo/src/components/Navbars/AdminNavbarLinks.js"],"names":["React","makeStyles","Search","CustomInput","Button","styles","useStyles","AdminNavbarLinks","classes","searchWrapper","className","margin","search","placeholder","inputProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,uCAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oCAAnB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oEAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGL,UAAU,CAACI,MAAD,CAA5B,CAEA,cAAe,SAASE,CAAAA,gBAAT,EAA4B,CACzC,GAAMC,CAAAA,OAAO,CAAGF,SAAS,EAAzB,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA,mBACE,4CACE,2BAAK,SAAS,CAAEE,OAAO,CAACC,aAAxB,eACE,oBAAC,WAAD,EACE,gBAAgB,CAAE,CAChBC,SAAS,CAAEF,OAAO,CAACG,MAAR,CAAiB,GAAjB,CAAuBH,OAAO,CAACI,MAD1B,CADpB,CAIE,UAAU,CAAE,CACVC,WAAW,CAAE,QADH,CAEVC,UAAU,CAAE,CACV,aAAc,QADJ,CAFF,CAJd,EADF,cAYE,oBAAC,MAAD,EAAQ,KAAK,CAAC,OAAd,CAAsB,aAAW,MAAjC,CAAwC,QAAQ,KAAhD,CAAiD,KAAK,KAAtD,eACE,oBAAC,MAAD,MADF,CAZF,CADF,CADF,CAwLD","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Search from \"@material-ui/icons/Search\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks() {\n  const classes = useStyles();\n  // const [openNotification, setOpenNotification] = React.useState(null);\n  // const [openProfile, setOpenProfile] = React.useState(null);\n\n  // const handleClickNotification = event => {\n  //   if (openNotification && openNotification.contains(event.target)) {\n  //     setOpenNotification(null);\n  //   } else {\n  //     setOpenNotification(event.currentTarget);\n  //   }\n  // };\n\n\n  // const handleCloseNotification = () => {\n  //   setOpenNotification(null);\n  // };\n\n  // const handleClickProfile = event => {\n  //   if (openProfile && openProfile.contains(event.target)) {\n  //     setOpenProfile(null);\n  //   } else {\n  //     setOpenProfile(event.currentTarget);\n  //   }\n  // };\n\n\n  // const handleCloseProfile = () => {\n  //   setOpenProfile(null);\n  // };\n  return (\n    <div>\n      <div className={classes.searchWrapper}>\n        <CustomInput\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search\n          }}\n          inputProps={{\n            placeholder: \"Search\",\n            inputProps: {\n              \"aria-label\": \"Search\"\n            }\n          }}\n        />\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button>\n      </div>\n\n      {/* <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Dashboard\"\n        className={classes.buttonLink}\n      >\n        <Dashboard className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>Dashboard</p>\n        </Hidden>\n      </Button> */}\n\n\n      {/* <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>5</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Mike John responded to your email\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You have 5 new tasks\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You{\"'\"}re now friend with Andrew\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another Notification\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another One\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div> */}\n\n\n\n\n      {/* <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Profile\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Settings\n                    </MenuItem>\n                    <Divider light />\n                    <MenuItem\n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Logout\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n */}\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}